trigger:
- '*'
pool:
  vmImage: ubuntu-18.04
  # ビルドシステムにnpmをインストールする
  demands:
  - npm
variables:
  buildConfiguration: Release
steps:
  # ビルドエージェントに必要な.NET Core SDKをインストールする
- task: UseDotNet@2
  displayName: Use .NET Core SDK 3.1.300
  inputs:
    packageType: sdk
    version: 3.1.300
  # ビルドエージェントに必要なnpmをインストールする
- task: Npm@1
  displayName: Run npm install
  inputs:
    verbose: false
  # Compile Sass
- script: ./node_modules/.bin/node-sass Tailspin.SpaceGame.Web/wwwroot --output Tailspin.SpaceGame.Web/wwwroot
  displayName: Compile Sass assets
  # Run Gulp
- task: gulp@1
  displayName: Run gulp tasks
  # ビルド情報をファイル出力する（Pipelineで提供される組み込み変数を出力している）
  # Build.DefinitionName ：Pipelineの名前
  # Build.BuildId        ：完了したビルドの識別子
  # Build.BuildNumber    ：完了したビルドの名前
- script: echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt
  displayName: Write build info
  workingDirectory: Tailspin.SpaceGame.Web/wwwroot
  # ビルドに必要な依存関係を復元・インストールする
- task: DotNetCoreCLI@2
  displayName: Restore project dependencies
  inputs:
    command: restore
    projects: '**/*.csproj'
  # ビルドする
- task: DotNetCoreCLI@2
  displayName: Build the project - Release
  inputs:
    command: build
    arguments: --no-restore --configuration Release
    projects: '**/*.csproj'
  # 成果物を.zipファイル化する
- task: DotNetCoreCLI@2
  displayName: Publish the project - Release
  inputs:
    command: publish
    projects: '**/*.csproj'
    publishWebProjects: false
    arguments: --no-build --configuration Release --output $(Build.ArtifactStagingDirectory)/Release
    # ビルドされた成果物を.zipファイルに追加する
    zipAfterPublish: true
  # Azure Pipelinesに.zipファイルを発行する
- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
  # 前のタスクが成功した場合のみ実行する
  condition: succeeded()
